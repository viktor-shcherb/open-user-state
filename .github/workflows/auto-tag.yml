name: Auto Tag From package.json

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0   # need full tag history

      - name: Configure git user
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Read version from package.json
        id: ver
        run: |
          if [ ! -f package.json ]; then
            echo "package.json missing"; exit 1;
          fi
          V=$(jq -r '.version' package.json)
          if [[ -z "$V" || "$V" == "null" ]]; then
            echo "Version missing in package.json"; exit 1;
          fi
          if [[ ! "$V" =~ ^[0-9]+(\.[0-9]+){2}(-[0-9A-Za-z.-]+)?$ ]]; then
            echo "Version '$V' is not valid semver (expected X.Y.Z[-prerelease])"; exit 1;
          fi
          echo "version=$V" >> "$GITHUB_OUTPUT"

      - name: Check if tag already exists
        id: tagcheck
        run: |
          TAG="v${{ steps.ver.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create & push tag
        if: steps.tagcheck.outputs.exists == 'false'
        run: |
          TAG="v${{ steps.ver.outputs.version }}"
          git tag -a "$TAG" -m "Release $TAG (auto)"
          git push origin "$TAG"
          echo "Created tag $TAG"

      - name: Summary
        run: |
          if [ "${{ steps.tagcheck.outputs.exists }}" = "true" ]; then
            echo "Version already tagged (v${{ steps.ver.outputs.version }})." >> $GITHUB_STEP_SUMMARY
          else
            echo "Tag v${{ steps.ver.outputs.version }} created and pushed." >> $GITHUB_STEP_SUMMARY
          fi
